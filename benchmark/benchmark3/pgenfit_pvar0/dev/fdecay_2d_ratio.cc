/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "fdecay_2d_ratio.hh"
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

#include "TStopwatch.h"

ClassImp(fdecay_2d_ratio) 

 fdecay_2d_ratio::fdecay_2d_ratio(const char *name, const char *title, 
                        RooAbsReal& _time_decay,
                        RooAbsCategory& _time_mult,
                        RooAbsReal& _N0,
                        RooAbsReal& _h1,
                        RooAbsReal& _h2,
                        RooAbsReal& _h3,
                        RooAbsReal& _h4,
                        RooAbsReal& _h6,
                        RooAbsReal& _h7,
                        RooAbsReal& _h8,
                        RooAbsReal& _h10,
                        RooAbsReal& _h11,
                        RooAbsReal& _h12,
                        RooAbsReal& _h14,
                        RooAbsReal& _h15,
                        RooAbsReal& _p1n1,
                        RooAbsReal& _p1n2,
                        RooAbsReal& _p1n3,
                        RooAbsReal& _p1n4,
                        RooAbsReal& _p1n6,
                        RooAbsReal& _p1n7,
                        RooAbsReal& _p1n8,
                        RooAbsReal& _p1n10,
                        RooAbsReal& _p1n11,
                        RooAbsReal& _p1n12,
                        RooAbsReal& _p2n1,
                        RooAbsReal& _p2n2,
                        RooAbsReal& _p2n3,
                        RooAbsReal& _p2n4,
                        RooAbsReal& _p2n6,
                        RooAbsReal& _p2n7,
                        RooAbsReal& _p2n8,
                        RooAbsReal& _fb0n,
                        RooAbsReal& _fb1n,
                        RooAbsReal& _fb2n,
                        RooAbsReal& _eff,
                        RooAbsReal& _r1,
                        RooAbsReal& _r2) :
   RooAbsPdf(name,title), 
   time_decay("time_decay","time_decay",this,_time_decay),
   time_mult("time_mult","time_mult",this,_time_mult),
   N0("N0","N0",this,_N0),
   h1("h1","h1",this,_h1),
   h2("h2","h2",this,_h2),
   h3("h3","h3",this,_h3),
   h4("h4","h4",this,_h4),
   h6("h6","h6",this,_h6),
   h7("h7","h7",this,_h7),
   h8("h8","h8",this,_h8),
   h10("h10","h10",this,_h10),
   h11("h11","h11",this,_h11),
   h12("h12","h12",this,_h12),
   h14("h14","h14",this,_h14),
   h15("h15","h15",this,_h15),
   p1n1("p1n1","p1n1",this,_p1n1),
   p1n2("p1n2","p1n2",this,_p1n2),
   p1n3("p1n3","p1n3",this,_p1n3),
   p1n4("p1n4","p1n4",this,_p1n4),
   p1n6("p1n6","p1n6",this,_p1n6),
   p1n7("p1n7","p1n7",this,_p1n7),
   p1n8("p1n8","p1n8",this,_p1n8),
   p1n10("p1n10","p1n10",this,_p1n10),
   p1n11("p1n11","p1n11",this,_p1n11),
   p1n12("p1n12","p1n12",this,_p1n12),
   p2n1("p2n1","p2n1",this,_p2n1),
   p2n2("p2n2","p2n2",this,_p2n2),
   p2n3("p2n3","p2n3",this,_p2n3),
   p2n4("p2n4","p2n4",this,_p2n4),
   p2n6("p2n6","p2n6",this,_p2n6),
   p2n7("p2n7","p2n7",this,_p2n7),
   p2n8("p2n8","p2n8",this,_p2n8),
   fb0n("fb0n","fb0n",this,_fb0n),
   fb1n("fb1n","fb1n",this,_fb1n),
   fb2n("fb2n","fb2n",this,_fb2n),
   eff("eff","eff",this,_eff),
   r1("r1","r1",this,_r1),
   r2("r2","r2",this,_r2)
 { 
 } 


 fdecay_2d_ratio::fdecay_2d_ratio(const fdecay_2d_ratio& other, const char* name) :  
   RooAbsPdf(other,name), 
   time_decay("time_decay",this,other.time_decay),
   time_mult("time_mult",this,other.time_mult),
   N0("N0",this,other.N0),
   h1("h1",this,other.h1),
   h2("h2",this,other.h2),
   h3("h3",this,other.h3),
   h4("h4",this,other.h4),
   h6("h6",this,other.h6),
   h7("h7",this,other.h7),
   h8("h8",this,other.h8),
   h10("h10",this,other.h10),
   h11("h11",this,other.h11),
   h12("h12",this,other.h12),
   h14("h14",this,other.h14),
   h15("h15",this,other.h15),
   p1n1("p1n1",this,other.p1n1),
   p1n2("p1n2",this,other.p1n2),
   p1n3("p1n3",this,other.p1n3),
   p1n4("p1n4",this,other.p1n4),
   p1n6("p1n6",this,other.p1n6),
   p1n7("p1n7",this,other.p1n7),
   p1n8("p1n8",this,other.p1n8),
   p1n10("p1n10",this,other.p1n10),
   p1n11("p1n11",this,other.p1n11),
   p1n12("p1n12",this,other.p1n12),
   p2n1("p2n1",this,other.p2n1),
   p2n2("p2n2",this,other.p2n2),
   p2n3("p2n3",this,other.p2n3),
   p2n4("p2n4",this,other.p2n4),
   p2n6("p2n6",this,other.p2n6),
   p2n7("p2n7",this,other.p2n7),
   p2n8("p2n8",this,other.p2n8),
   fb0n("fb0n",this,other.fb0n),
   fb1n("fb1n",this,other.fb1n),
   fb2n("fb2n",this,other.fb2n),
   eff("eff",this,other.eff),
   r1("r1",this,other.r1),
   r2("r2",this,other.r2)
 {
 } 



 Double_t fdecay_2d_ratio::evaluate() const 
 {

     TStopwatch stopwatch;
     stopwatch.Start();
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
    double re = (1.0-2.0*(1.0-eff)*eff)/(2.0*(1.0-eff)*eff);
	double r = r1+r2;
	double a0 = r1;
  	double a1 = 1.0-r-r1;
  	double a2 = 2.0*re*(1.0-r-r1)-r1;
  	double b0 = r2;
  	double b1 = r1-r2;
  	double b2 = 1.0-r-r2+2.0*re*(r1-r2);
	double t = time_decay;
	int n = time_mult;
	double l1= log(2)/h1;
	double l2= log(2)/h2;
	double l3= log(2)/h3;	
	double l4= log(2)/h4;
	double l6= log(2)/h6;
	double l7= log(2)/h7;
	double l8= log(2)/h8;
	double l10= log(2)/h10;
	double l11= log(2)/h11;
	double l12= log(2)/h12;
	double l14= log(2)/h14;
	double l15= log(2)/h15;
	double e1=exp(-l1*t);
	double e2=exp(-l2*t);
	double e3=exp(-l3*t);
	double e4=exp(-l4*t);
	double e6=exp(-l6*t);
	double e7=exp(-l7*t);
	double e8=exp(-l8*t);
	double e10=exp(-l10*t);
	double e11=exp(-l11*t);
	double e12=exp(-l12*t);
	double e14=exp(-l14*t);
	double e15=exp(-l15*t);

	double f1 = 0;
	f1 = N0*l1*e1;

	double f2 = 0;
	f2 = N0*l1*l2*(1-p1n1-p2n1)*(e1/(l2-l1)+e2/(l1-l2));

	double f3 = 0;
	f3 = N0*l1*l2*l3*(1-p1n1-p2n1)*(1-p1n2-p2n2)*(e1/(l2-l1)/(l3-l1)+e2/(l1-l2)/(l3-l2)+e3/(l1-l3)/(l2-l3));

	double f4 = 0;
	f4 = N0*l1*l2*l3*l4*(1-p1n1-p2n1)*(1-p1n2-p2n2)*(1-p1n3-p2n3)*(e1/(l2-l1)/(l3-l1)/(l4-l1)+e2/(l1-l2)/(l3-l2)/(l4-l2)+e3/(l1-l3)/(l2-l3)/(l4-l3)+e4/(l1-l4)/(l2-l4)/(l3-l4));

	double f6 = 0;
	f6 = N0*l1*l6*p1n1*(e1/(l6-l1)+e6/(l1-l6));

	double f7 = 0,f7_1 = 0,f7_2 = 0;
	f7_1 = N0*l1*l2*l7*(1-p1n1-p2n1)*p1n2*(e1/(l2-l1)/(l7-l1)+e2/(l1-l2)/(l7-l2)+e7/(l1-l7)/(l2-l7));
	f7_2 = N0*l1*l6*l7*p1n1*(1-p1n6-p2n6)*(e1/(l6-l1)/(l7-l1)+e6/(l1-l6)/(l7-l6)+e7/(l1-l7)/(l6-l7));
	f7 = f7_1 + f7_2;

	double f8 = 0, f8_1 = 0, f8_2 = 0, f8_3 = 0;
	f8_1 = N0*l1*l2*l3*l8*(1-p1n1-p2n1)*(1-p1n2-p2n2)*p1n3*(e1/(l2-l1)/(l3-l1)/(l8-l1)+e2/(l1-l2)/(l3-l2)/(l8-l2)+e3/(l1-l3)/(l2-l3)/(l8-l3)+e8/(l1-l8)/(l2-l8)/(l3-l8));
	f8_2 = N0*l1*l2*l7*l8*(1-p1n1-p2n1)*p1n2*(1-p1n7-p2n7)*(e1/(l2-l1)/(l7-l1)/(l8-l1)+e2/(l1-l2)/(l7-l2)/(l8-l2)+e7/(l1-l7)/(l2-l7)/(l8-l7)+e8/(l1-l8)/(l2-l8)/(l7-l8));
	f8_3 = N0*l1*l6*l7*l8*p1n1*(1-p1n6-p2n6)*(1-p1n7-p2n7)*(e1/(l6-l1)/(l7-l1)/(l8-l1)+e6/(l1-l6)/(l7-l6)/(l8-l6)+e7/(l1-l7)/(l6-l7)/(l8-l7)+e8/(l1-l8)/(l6-l8)/(l7-l8));
	f8 = f8_1 + f8_2 + f8_3;

	double f10 = 0;
	f10 = N0*l1*l10*p2n1*(e1/(l10-l1)+e10/(l1-l10));

	double f11 = 0, f11_1 = 0, f11_2 = 0, f11_3 = 0;
	f11_1 = N0*l1*l2*l11*(1-p1n1-p2n1)*p1n2*(e1/(l2-l1)/(l11-l1)+e2/(l1-l2)/(l11-l2)+e11/(l1-l11)/(l2-l11));
	f11_2 = N0*l1*l6*l11*p1n1*p1n6*(e1/(l6-l1)/(l11-l1)+e6/(l1-l6)/(l11-l6)+e11/(l1-l11)/(l6-l11));
	f11_3 = N0*l1*l10*l11*p1n2*(1-p1n10)*(e1/(l10-l1)/(l11-l1)+e10/(l1-l10)/(l11-l10)+e11/(l1-l11)/(l10-l11));
	f11 = f11_1+f11_2+f11_3;

	double f12_s[6], f12=0;
	for(int i=0;i<6;i++){
		f12_s[i]=0;
	}
	f12_s[0] = N0*l1*l2*l3*l12*(1-p1n1-p2n1)*(1-p1n2-p2n2)*p1n3*(e1/(l2-l1)/(l3-l1)/(l12-l1)+e2/(l1-l2)/(l3-l2)/(l12-l2)+e3/(l1-l3)/(l2-l3)/(l12-l3)+e12/(l1-l12)/(l2-l12)/(l3-l12));
	f12_s[1] = N0*l1*l2*l7*l12*(1-p1n1-p2n1)*p1n2*p1n7*(e1/(l2-l1)/(l7-l1)/(l12-l1)+e2/(l1-l2)/(l7-l2)/(l12-l2)+e7/(l1-l7)/(l2-l7)/(l12-l7)+e12/(l1-l12)/(l2-l12)/(l7-l12));
	f12_s[2] = N0*l1*l2*l11*l12*(1-p1n1-p2n1)*p2n2*(1-p1n11)*(e1/(l2-l1)/(l11-l1)/(l12-l1)+e2/(l1-l2)/(l11-l2)/(l12-l2)+e11/(l1-l11)/(l2-l11)/(l12-l11)+e12/(l1-l12)/(l2-l12)/(l11-l12));
	f12_s[3] = N0*l1*l6*l7*l12*p1n1*(1-p1n6-p2n6)*p1n7*(e1/(l6-l1)/(l7-l1)/(l12-l1)+e6/(l1-l6)/(l7-l6)/(l12-l6)+e7/(l1-l7)/(l6-l7)/(l12-l7)+e12/(l1-l12)/(l6-l12)/(l7-l12));
	f12_s[4] = N0*l1*l6*l11*l12*p1n1*p1n6*(1-p1n11)*(e1/(l6-l1)/(l11-l1)/(l12-l1)+e6/(l1-l6)/(l11-l6)/(l12-l6)+e11/(l1-l11)/(l6-l11)/(l12-l11)+e12/(l1-l12)/(l6-l12)/(l11-l12));
	f12_s[5] = N0*l1*l10*l11*l12*p2n1*(1-p1n10)*(1-p1n11)*(e1/(l10-l1)/(l11-l1)/(l12-l1)+e10/(l1-l10)/(l11-l10)/(l12-l10)+e11/(l1-l11)/(l10-l11)/(l12-l11)+e12/(l1-l12)/(l10-l12)/(l11-l12));
	for(int i=0;i<6;i++){
		f12 = f12 +f12_s[i];
	}

	double f14 = 0, f14_1 = 0, f14_2 = 0;
	f14_1 = N0*l1*l6*l14*p1n1*p2n6*(e1/(l14-l1)/(l6-l1)+e6/(l1-l6)/(l14-l6)+e14/(l1-l14)/(l6-l14));
	f14_2 = N0*l1*l10*l14*p2n1*p1n10*(e1/(l10-l1)/(l14-l1)+e2/(l10-l2)/(l1-l2)+e10/(l1-l10)/(l2-l10));//add one more line 
	f14 = f14_1 + f14_2;

	double f15_s[7], f15 = 0;
	for(int i=0;i<7;i++){
		f15_s[i]=0;
	}
	f15_s[0] = N0*l1*l2*l7*l15*(1-p1n1-p2n1)*p1n2*p2n7*(e1/(l2-l1)/(l7-l1)/(l15-l1)+e2/(l1-l2)/(l7-l2)/(l15-l2)+e7/(l1-l7)/(l2-l7)/(l15-l7)+e15/(l1-l15)/(l2-l15)/(l7-l15));
	f15_s[1] = N0*l1*l2*l11*l15*(1-p1n1-p2n1)*p2n2*p1n11*(e1/(l2-l1)/(l11-l1)/(l15-l1)+e2/(l1-l2)/(l11-l2)/(l15-l2)+e11/(l1-l11)/(l2-l11)/(l15-l11)+e15/(l1-l15)/(l2-l15)/(l11-l15));
	f15_s[2] = N0*l1*l6*l7*l15*p1n1*(1-p1n6-p2n6)*p2n7*(e1/(l6-l1)/(l7-l1)/(l15-l1)+e6/(l1-l6)/(l7-l6)/(l15-l6)+e7/(l1-l7)/(l6-l7)/(l15-l7)+e15/(l1-l15)/(l6-l15)/(l7-l15));
	f15_s[3] = N0*l1*l6*l11*l15*p1n1*p1n6*p1n11*(e1/(l6-l1)/(l11-l1)/(l15-l1)+e6/(l1-l6)/(l11-l6)/(l15-l6)+e11/(l1-l11)/(l6-l11)/(l7-l11)+e15/(l1-l15)/(l6-l15)/(l11-l15));
	f15_s[4] = N0*l1*l6*l14*l15*p1n1*p2n6*(e1/(l6-l1)/(l14-l1)/(l15-l1)+e6/(l1-l6)/(l14-l6)/(l15-l6)+e14/(l1-l14)/(l6-l14)/(l15-l14)+e15/(l1-l15)/(l6-l15)/(l14-l15));
	f15_s[5] = N0*l1*l10*l11*l15*p2n1*(1-p1n10)*p1n11*(e1/(l10-l1)/(l11-l1)/(l15-l1)+e10/(l1-l10)/(l11-l10)/(l15-l10)+e11/(l1-l11)/(l10-l11)/(l15-l11)+e15/(l1-l15)/(l10-l15)/(l11-l15));
	f15_s[6] = N0*l1*l10*l14*l15*p2n1*p1n10*(e1/(l10-l1)/(l14-l1)/(l15-l1)+e10/(l1-l10)/(l14-l10)/(l15-l10)+e14/(l1-l14)/(l10-l14)/(l15-l14)+e15/(l1-l15)/(l10-l15)/(l14-l15));
	for(int i=0;i<7;i++){
		f15 = f15 + f15_s[i];
	}
	
	
	double fnn2 = 0;
	fnn2 = eff*eff*(f1*p2n1+f2*p2n2+f3*p2n3+f4*p2n4+f6*p2n6+f7*p2n7+f8*p2n8);
	double fnn1 = 0;
	fnn1 = eff*(f1*p1n1+f2*p1n2+f3*p1n3+f4*p1n4+f6*p1n6+f7*p1n7+f8*p1n8+f10*p1n10+f11*p1n11+f12*p1n12);
	//fnn1 = eff*(f1*p1n1+f2*p1n2+f3*p1n3+f4*p1n4+f6*p1n6+f7*p1n7+f8*p1n8+f10*p1n10+f11*p1n11+f12*p1n12);
	double ft = 0;
	ft = f1+f2+f3+f4+f6+f7+f8+f10+f11+f12+f14+f15;
	double fnn0 = 0;
	fnn0 = ft - fnn2 - fnn1;
	double FFT = 0;	//FF2N = b0*ft + b1*fnn1 + b2*fnn2 +fb2n;
	double FF1N = 0;
	double FF2N = 0;
	double FF0N = 0;

	FFT = ft + fb0n;
	FF1N = a0*ft + a1*fnn1 + a2*fnn2 + fb1n;
	FF2N = b0*ft + b1*fnn1 + b2*fnn2 + fb2n;
	FF0N = FFT - FF1N - FF2N;
    double returnvalue = 0;
    if(n==0){
        returnvalue = FF0N;
    }else if(n==1){
        returnvalue = FF1N;
    }else if(n>=2){
        returnvalue = FF2N;
    }
        stopwatch.Stop();
        std::cout<<"Time (us) = "<<stopwatch.RealTime()*1e6<<std::endl;
    return returnvalue;

 } 



