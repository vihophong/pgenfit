/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef FITF
#define FITF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

#define knri 9
#define kmaxpar 5
#define kmaxndecay 10
#define kmaxpaths 100
//#define neueff 0.613384

class fitF : public RooAbsPdf {
public:
  fitF() {} ;
  fitF(const char *name, const char *title,
              RooAbsReal& _x,
              RooAbsCategory& _y,
              RooAbsReal& _neueff,
              RooAbsReal& _p0,
              RooAbsReal& _p1,
              RooAbsReal& _p2,
              RooAbsReal& _p3,
              RooAbsReal& _p4,
              RooAbsReal& _p5,
              RooAbsReal& _p6,
              RooAbsReal& _p7,
              RooAbsReal& _p8,
              RooAbsReal& _p9,
              RooAbsReal& _p10,
              RooAbsReal& _p11,
              RooAbsReal& _p12,
              RooAbsReal& _p13,
              RooAbsReal& _p14,
              RooAbsReal& _p15,
              RooAbsReal& _p16,
              RooAbsReal& _p17,
              RooAbsReal& _p18,
              RooAbsReal& _p19,
              RooAbsReal& _p20,
              RooAbsReal& _p21);
  fitF(const fitF& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new fitF(*this,newname); }
  inline virtual ~fitF() { }
  Double_t eval(Double_t* par,Double_t xx, Double_t yy);
protected:

  RooRealProxy x ;
  RooCategoryProxy y ;
  RooRealProxy neueff ;
  RooRealProxy p0 ;
  RooRealProxy p1 ;
  RooRealProxy p2 ;
  RooRealProxy p3 ;
  RooRealProxy p4 ;
  RooRealProxy p5 ;
  RooRealProxy p6 ;
  RooRealProxy p7 ;
  RooRealProxy p8 ;
  RooRealProxy p9 ;
  RooRealProxy p10 ;
  RooRealProxy p11 ;
  RooRealProxy p12 ;
  RooRealProxy p13 ;
  RooRealProxy p14 ;
  RooRealProxy p15 ;
  RooRealProxy p16 ;
  RooRealProxy p17 ;
  RooRealProxy p18 ;
  RooRealProxy p19 ;
  RooRealProxy p20 ;
  RooRealProxy p21 ;

  Double_t evaluate() const ;

  Double_t corefcn(Int_t ndecay,Int_t* decaymap,Int_t* nneu, Double_t* b1n,Double_t* b2n,Double_t* lamda,Double_t N0,Double_t t) const;
  Double_t fcn_gen(Double_t t, Double_t *par) const;
  Double_t fcn_gen_w1neutron(Double_t t, Double_t *par) const;
  Double_t fcn_gen_w2neutron(Double_t t, Double_t *par) const;

private:

  ClassDef(fitF,1) // Your description goes here...
};

#endif
